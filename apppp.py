# -*- coding: utf-8 -*-
"""apppp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q-PL0jFI57zhNPPuSLVGwKePhKy7DuQS
"""

import streamlit as st
import pandas as pd
import joblib
from joblib import load

# Load model dan data
#model = joblib.load("personality_model.joblib")
url = "https://raw.githubusercontent.com/Khoerudin683/proyek-data-mining/main/personality_dataset.csv"
df = pd.read_csv(url)

# Navigasi antar halaman
page = st.sidebar.selectbox("Navigasi", ["Pendahuluan", "Model", "Prediksi", "Anggota Kelompok"])

# ---------------- Halaman 1: Pendahuluan ----------------
if page == "Pendahuluan":
    st.title("ðŸ“Š Prediksi Kepribadian Berdasarkan Perilaku Sosial")
    st.write("""
    Dataset ini berisi 5.000 data yang mencerminkan kebiasaan sosial seseorang dan diklasifikasikan sebagai **Introvert** atau **Extrovert**.

    **Fitur-fitur:**
    - Time_spent_Alone
    - Stage_fear
    - Social_event_attendance
    - Going_outside
    - Drained_after_socializing
    - Friends_circle_size
    - Post_frequency

    **Target:** Personality (Introvert/Extrovert)
    """)
    st.subheader("Cuplikan Dataset")
    st.dataframe(df.head())

# ---------------- Halaman 2: Model ----------------
elif page == "Model":
    st.title("ðŸ“ˆ Model Machine Learning")
    st.write("""
    Model yang digunakan adalah **Random Forest Classifier**. Model ini dilatih menggunakan data yang sudah diproses (encoding + scaling).

    Hasil evaluasi:
    - Akurasi: 99.7%
    - Sangat akurat dalam membedakan kepribadian introvert dan extrovert.
    """)
    st.image("https://upload.wikimedia.org/wikipedia/commons/7/76/Random_forest_diagram_complete.png", width=500)

# ---------------- Halaman 3: Prediksi ----------------
elif page == "Prediksi":
    st.title("ðŸ§ª Prediksi Kepribadian")

    st.write("Masukkan data di bawah ini untuk memprediksi apakah seseorang **Introvert** atau **Extrovert**.")

    # Form input pengguna
    time_alone = st.slider("Time Spent Alone", 0, 10, 5)
    stage_fear = st.selectbox("Stage Fear", ["Yes", "No"])
    event_attend = st.slider("Social Event Attendance", 0, 10, 5)
    going_out = st.slider("Going Outside", 0, 10, 5)
    drained_social = st.selectbox("Drained After Socializing", ["Yes", "No"])
    friends_size = st.slider("Friends Circle Size", 0, 20, 10)
    post_freq = st.slider("Post Frequency", 0, 10, 5)

    # Prediksi
    if st.button("Prediksi Personality"):
        input_df = pd.DataFrame([{
            "Time_spent_Alone": time_alone,
            "Stage_fear": stage_fear,
            "Social_event_attendance": event_attend,
            "Going_outside": going_out,
            "Drained_after_socializing": drained_social,
            "Friends_circle_size": friends_size,
            "Post_frequency": post_freq
        }])

        prediction = model.predict(input_df)[0]
        st.success(f"Prediksi: **{prediction}**")

# ---------------- Halaman 4: Anggota Kelompok ----------------
elif page == "Anggota Kelompok":
    st.title("ðŸ‘¥ Anggota Kelompok")
    st.write("""
    - Nama 1 (NIM)
    - Nama 2 (NIM)
    - Nama 3 (NIM)
    - Nama 4 (NIM)

    *(Silakan ganti dengan nama asli kelompokmu.)*
    """)